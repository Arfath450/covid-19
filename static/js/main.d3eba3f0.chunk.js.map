{"version":3,"sources":["Table.module.css","Components/Country/Country.module.css","Components/Cards/Cards.module.css","Components/Charts/Charts.module.css","India.module.css","App.module.css","Components/Cards/Cards.jsx","Api/index.js","Components/Charts/Charts.jsx","Components/Country/Country.jsx","Link.jsx","IndiaLink.jsx","Router.jsx","Countries.jsx","Tables.jsx","StateTable.jsx","IndiaTable.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","Styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","CardContent","Typography","gutterbuttom","confi","cval","varient","start","end","value","duration","separator","date","Date","toDateString","para","rval","dval","url","fetchData","country","a","changeUrl","axios","get","fetchMonthlyData","modifiedData","map","daily","total","reportDate","fetchCountries","countries","name","Charts","useState","setDaily","useEffect","fetchMonthly","lineChart","length","chart","labels","options","legend","display","title","text","fontColor","fontSize","scales","yAxes","ticks","xAxes","BarChart","datasets","label","backgroundColor","Country","countryChange","fetchedCountries","setFetchedCountries","fetchApi","FormControl","NativeSelect","opt","defaultValue","onChange","e","target","i","global","key","useStyle","makeStyles","root","background","color","padding","marginTop","marginBottom","boxShadow","Link","classes","Button","size","countLink","activeClassName","exact","to","margin","IndiaLink","stateLink","Router","state","fetchdData","setState","this","getFullYear","header","span","footer","React","Component","Countries","countriesData","props","TableRow","TableCell","confirm","NewConfirmed","tconfirm","TotalConfirmed","recover","NewRecovered","trecover","TotalRecovered","death","NewDeaths","tdeath","TotalDeaths","Tables","currentDate","loading","term","bind","event","res","Global","search","type","placeholder","TableContainer","Table","TableHead","head","TableBody","filter","x","toLowerCase","includes","StateTable","states","deltaconfirmed","active","deltarecovered","deltadeaths","IndiaTable","statewise","console","log","States","App","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","basename","process","onAddToHomescreenClick","alert","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d3eba3f0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"Table_head__2sJK5\",\"country\":\"Table_country__ww812\",\"confirm\":\"Table_confirm__38gvK\",\"tconfirm\":\"Table_tconfirm__3xhVy\",\"recover\":\"Table_recover__uSJfW\",\"trecover\":\"Table_trecover__1kKH4\",\"death\":\"Table_death__57Ws9\",\"tdeath\":\"Table_tdeath__3_dz7\",\"container\":\"Table_container__481kb\",\"header\":\"Table_header__1wPCD\",\"span\":\"Table_span__19itR\",\"search\":\"Table_search__3YApa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormControl\":\"Country_FormControl__3uUZg\",\"global\":\"Country_global__2f6G_\",\"opt\":\"Country_opt__2bBHj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1TDLq\",\"card\":\"Cards_card__153w0\",\"confirmed\":\"Cards_confirmed__O8c5h\",\"recovered\":\"Cards_recovered__1tYx0\",\"deaths\":\"Cards_deaths__1o1L_\",\"confi\":\"Cards_confi__2tDhr\",\"cval\":\"Cards_cval__swBZS\",\"rval\":\"Cards_rval__2EDnf\",\"dval\":\"Cards_dval__1yFEL\",\"date\":\"Cards_date__26iTp\",\"para\":\"Cards_para__37RDC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__17S4b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"India_head__2PTQf\",\"container\":\"India_container__1DZax\",\"state\":\"India_state__oTYRp\",\"confirmed\":\"India_confirmed__10Srm\",\"active\":\"India_active__R1CsO\",\"recovered\":\"India_recovered__1XeIZ\",\"deaths\":\"India_deaths__3103z\",\"header\":\"India_header__jz2cm\",\"span\":\"India_span__3ma0h\",\"search\":\"India_search__3VAYS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3lOPe\",\"header\":\"App_header__3p3WG\",\"span\":\"App_span__C5smL\",\"footer\":\"App_footer__3enXk\",\"countLink\":\"App_countLink__1eJW9\",\"stateLink\":\"App_stateLink__WOhpw\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid, } from '@material-ui/core';\r\nimport Styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({ data : { confirmed, recovered, deaths, lastUpdate } }) => {\r\n    \r\n    if(!confirmed){\r\n        return 'Loading...';\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <div className={Styles.container}>\r\n            <Grid container spacing={1} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(Styles.card, Styles.confirmed)}>\r\n                    <CardContent >\r\n                        <Typography gutterbuttom className={Styles.confi}>Confirmed</Typography>\r\n                        <Typography className={Styles.cval} varient=\"h5\">\r\n                            <CountUp\r\n                                start={0}\r\n                                end={confirmed.value}\r\n                                duration={2.5}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography className={Styles.date}>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography className={Styles.para}>Number of Confirmed Covid-19 cases</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={cx(Styles.card, Styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography gutterbuttom className={Styles.confi}>Recovered</Typography>\r\n                        <Typography className={Styles.rval} varient=\"h5\">\r\n                        <CountUp\r\n                                start={0}\r\n                                end={recovered.value}\r\n                                duration={2.5}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography className={Styles.date}>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography className={Styles.para}>Number of people Recovered from Covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={cx(Styles.card, Styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography className={Styles.confi} gutterbuttom>Deaths</Typography>\r\n                        <Typography className={Styles.dval} varient=\"h5\">\r\n                        <CountUp\r\n                                start={0}\r\n                                end={deaths.value}\r\n                                duration={2.5}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography className={Styles.date}>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography className={Styles.para}>Number of Deaths caused by Covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeUrl = url;\r\n\r\n    if(country){\r\n        changeUrl =  `${url}/countries/${country}`;\r\n    }\r\n\r\n    try {\r\n        const { data:{confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeUrl);\r\n        \r\n        return{confirmed, recovered, deaths, lastUpdate};\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchMonthlyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData = data.map((daily) => ({\r\n            confirmed:daily.confirmed.total,\r\n            deaths:daily.deaths.total,\r\n            date:daily.reportDate,\r\n        }));\r\n        \r\n        return modifiedData;\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data : { countries } } = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country) => country.name)\r\n    } catch (error) {\r\n        \r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport {fetchMonthlyData} from '../../Api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport { red } from '@material-ui/core/colors';\r\nimport Styles from './Charts.module.css';\r\n\r\nconst Charts = ( {data: { confirmed, recovered, deaths}, country}) => {\r\n    const[daily, setDaily] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchMonthly = async () => {\r\n            setDaily(await fetchMonthlyData());  \r\n\r\n        }\r\n\r\n        fetchMonthly();\r\n    },[]);\r\n\r\n    const lineChart = (\r\n        daily.length\r\n        ? (\r\n            <Bar className={Styles.chart}\r\n            data={{\r\n                labels:daily.map(({date}) => date),\r\n                labels:['Confirmed','Recovered', 'Deaths'],\r\n                    datasets: [{\r\n                    data: daily.map(({confirmed}) => confirmed),\r\n                    data: daily.map(({recovered}) => recovered),\r\n                    data: daily.map(({deaths}) => deaths), \r\n                    backgroundColor:[\"red\",'green','grey'],\r\n                    data:[confirmed.value, recovered.value,deaths.value], \r\n                    fill:true,\r\n                }],\r\n            }}\r\n                options={{\r\n                    legend: { display: false },\r\n                    title: { display: true, text:`current state in the world`, fontColor:'black', fontSize:16,\r\n                                },\r\n                    scales: {\r\n                        yAxes: [{\r\n                            ticks:{\r\n                                fontColor:'black',\r\n                                        }\r\n                                }],\r\n                                xAxes: [{\r\n                                    ticks:{\r\n                                fontColor:'black',\r\n                                fontSize:18,\r\n                                        }\r\n                                }],\r\n                            },\r\n                }}\r\n        />) : null\r\n    )\r\n\r\n    const BarChart = (\r\n        confirmed\r\n        ? (\r\n            <Bar \r\n                data={{\r\n                    labels:['Confirmed', 'Recovered', 'Deaths'],\r\n                    datasets:[{\r\n                        label:\"people\",\r\n                        backgroundColor: ['red','green','grey'],\r\n                        data:[confirmed.value, recovered.value, deaths.value]\r\n                    }],\r\n                    \r\n                }}\r\n                options={{\r\n                    legend: { display: false },\r\n                    title: { display: true, text:`current state in ${country}`},\r\n                }}\r\n            /> ): null\r\n    )\r\n\r\n    return(\r\n        <>\r\n        <div className={Styles.container}>\r\n            {country ? BarChart : lineChart}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Charts;","import React, { useState, useEffect } from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core';\r\nimport { fetchCountries } from '../../Api';\r\nimport Styles from './Country.module.css';\r\n\r\nconst Country = ({ countryChange }) => {\r\n\r\n    const[fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            setFetchedCountries( await fetchCountries());\r\n        }\r\n\r\n        fetchApi();\r\n    },[setFetchedCountries]);\r\n\r\n    return(\r\n        <>\r\n        <FormControl className={Styles.FormControl}>\r\n            <NativeSelect className={Styles.opt} defaultValue=\"\" onChange={(e) => countryChange(e.target.value)} >\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, i) => <option className={Styles.global} key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Country;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Styles from './App.module.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyle = makeStyles({\r\n    root:{\r\n        background:'#455a64',\r\n        color: 'white',\r\n        padding:'10px 40px',\r\n        marginTop: '20px',\r\n        marginBottom:'70px',\r\n        boxShadow: '0 5px 5px 0 black',\r\n        \"&:hover\": {\r\n            backgroundColor: \"grey\",\r\n        }\r\n    },\r\n    label:{\r\n        color:'white',\r\n        fontSize:'20px',\r\n    }\r\n}) \r\n\r\nconst Link = () => {\r\n    const classes = useStyle();\r\n    return(\r\n        <>\r\n        <Button size=\"large\" classes={{root:classes.root, label: classes.label}}>\r\n            <NavLink className={Styles.countLink} activeClassName=\"active\" exact to=\"/tables\">Countries Table</NavLink>\r\n        </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Link;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Styles from './App.module.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyle = makeStyles({\r\n    root:{\r\n        background:'#455a64',\r\n        color: 'white',\r\n        padding:'10px 40px',\r\n        margin: '20px 0',\r\n        boxShadow: '0 5px 5px 0 black',\r\n        \"&:hover\": {\r\n            backgroundColor: \"grey\",\r\n        }\r\n    },\r\n    label:{\r\n        color:'white',\r\n        fontSize:'20px',\r\n    }\r\n}) \r\n\r\nconst IndiaLink = () => {\r\n    const classes = useStyle();\r\n    return(\r\n        <>\r\n        <Button size=\"large\" classes={{root:classes.root, label: classes.label}}><NavLink className={Styles.stateLink} activeClassName=\"active\" exact to=\"/state\">India Status</NavLink></Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default IndiaLink;","import React from 'react';\r\nimport { Cards, Charts, Country} from './Components';\r\nimport Styles from './App.module.css';\r\nimport { fetchData } from './Api';\r\nimport Link from './Link';\r\nimport IndiaLink from './IndiaLink';\r\n\r\nclass Router extends React.Component {\r\n\r\n    state={\r\n        data: {},\r\n        country: \"\",\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const fetchdData = await fetchData();\r\n        \r\n        this.setState({ data : fetchdData });\r\n    \r\n    }\r\n\r\n    countryChange = async (country) => {\r\n        \r\n        const fetchdData = await fetchData(country);\r\n        this.setState({ data : fetchdData, country:country });\r\n    }\r\n\r\n    render(){\r\n        const {data, country} = this.state;\r\n\r\n        const date = new Date().getFullYear()\r\n\r\n        return(\r\n            <>\r\n            <div className={Styles.header}>\r\n                <p>Covid-<span className={Styles.span}>19</span></p>\r\n            </div>\r\n\r\n            <div className={Styles.container}>\r\n                <Country countryChange={this.countryChange}/>\r\n                <IndiaLink/>\r\n                <Cards data={data}/>\r\n                <Link/>\r\n                <Charts data={data} country={country}/>\r\n            </div>\r\n\r\n            <div className={Styles.footer}>\r\n                <p>Copyright &copy; {date} Covid-19</p>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Router;","import React from 'react';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Styles from './Table.module.css';\r\n\r\nclass Countries extends React.Component{\r\n\r\n    render(){\r\n        const { countriesData } = this.props;\r\n\r\n        return(\r\n            <>\r\n            <TableRow>\r\n                <TableCell className={Styles.country}>{countriesData.Country}</TableCell>\r\n                <TableCell className={Styles.confirm}>{countriesData.NewConfirmed}</TableCell>\r\n                <TableCell className={Styles.tconfirm}>{countriesData.TotalConfirmed}</TableCell>\r\n                <TableCell className={Styles.recover}>{countriesData.NewRecovered}</TableCell>\r\n                <TableCell className={Styles.trecover}>{countriesData.TotalRecovered}</TableCell>\r\n                <TableCell className={Styles.death}>{countriesData.NewDeaths}</TableCell>\r\n                <TableCell className={Styles.tdeath}>{countriesData.TotalDeaths}</TableCell>\r\n            </TableRow>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Countries;","import React from 'react';\r\nimport axios from 'axios';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Countries from './Countries';\r\nimport Styles from './Table.module.css';\r\n\r\n\r\nfunction searching(term){\r\n    return function(x){\r\n        return x.Country.toLowerCase().includes(term.toLowerCase()) || !term;\r\n    }\r\n}\r\n\r\nclass Tables extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            countriesData:[],\r\n            term:\"\",\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    onChange(event){\r\n        this.setState({term : event.target.value});\r\n    }\r\n\r\n    state={\r\n        countriesData : [],\r\n        global: [],\r\n        currentDate: null,\r\n        loading: true,\r\n    }\r\n\r\n    async componentDidMount(){\r\n        \r\n        const res = await axios.get(\" https://api.covid19api.com/summary\");\r\n        \r\n        this.setState({countriesData: res.data.Countries});\r\n        this.setState({global: res.data.Global});\r\n        this.setState({currentDate: res.data.Date});\r\n        this.setState({loading: false});\r\n    }\r\n\r\n    render(){\r\n        if(this.state.loading){\r\n            return(\r\n                <h1>Loading...</h1>\r\n            )\r\n        }\r\n\r\n        return(\r\n            <>\r\n            <div className={Styles.header}>\r\n                <p>Covid-<span className={Styles.span}>19</span></p>\r\n            </div>\r\n            <div className={Styles.search}>\r\n                <input type='text' placeholder='Search...' onChange={this.onChange}/>\r\n            </div>\r\n                <div>\r\n                    <TableContainer className={Styles.container}>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell className={Styles.head}>Countries</TableCell>\r\n                                    <TableCell className={Styles.head}>New Confirmed Cases</TableCell>\r\n                                    <TableCell className={Styles.head}>Total Confirmed Cases</TableCell>\r\n                                    <TableCell className={Styles.head}>New Recovered</TableCell>\r\n                                    <TableCell className={Styles.head}>Total Recovered</TableCell>\r\n                                    <TableCell className={Styles.head}>New Deaths</TableCell>\r\n                                    <TableCell className={Styles.head}>Total Deaths</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {this.state.countriesData.filter(searching(this.state.term)).map(country => (\r\n                                    <Countries countriesData={country} key={country.Country}/>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Tables;","import React from 'react';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Styles from './India.module.css';\r\n\r\nclass StateTable extends React.Component{\r\n\r\n    render(){\r\n\r\n        const { states } = this.props;\r\n        return(\r\n            <>\r\n            <TableRow>\r\n                <TableCell className={Styles.state}>{states.state}</TableCell>\r\n                <TableCell className={Styles.confirmed}>↑ {states.deltaconfirmed}<br/>{states.confirmed}</TableCell>\r\n                <TableCell className={Styles.active}>{states.active}</TableCell>\r\n                <TableCell className={Styles.recovered}>↑ {states.deltarecovered}<br/>{states.recovered}</TableCell>\r\n                <TableCell className={Styles.deaths}>↑ {states.deltadeaths}<br/>{states.deaths}</TableCell>\r\n            </TableRow>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StateTable;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { render } from '@testing-library/react';\r\nimport StateTable from './StateTable';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Styles from './India.module.css'; \r\n\r\nconst url=\"https://api.covid19india.org/data.json\";\r\n\r\nconst searching = (term) => {\r\n        return function(x){\r\n            return x.state.toLowerCase().includes(term.toLowerCase()) || !term;\r\n        }\r\n}\r\n\r\nclass IndiaTable extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            states:[],\r\n            term:\"\",\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    onChange = (e) =>{\r\n        this.setState({term: e.target.value});\r\n    }\r\n\r\n    state={\r\n        states:[],\r\n        loading:true,\r\n    }\r\n\r\n    async componentDidMount(){\r\n\r\n        const res = await axios.get(url);\r\n        this.setState({states: res.data.statewise});\r\n        this.setState({loading:false});\r\n        console.log(res);\r\n    }\r\n\r\n    render(){\r\n        if(this.state.loading){\r\n            return <h1>loaging...</h1>\r\n        }\r\n        \r\n        return(\r\n            <>\r\n            <div>\r\n            <div className={Styles.header}>\r\n                <p>Covid-<span className={Styles.span}>19</span></p>\r\n            </div>\r\n            <div className={Styles.search}>\r\n                <input type='text' placeholder='Search...' onChange={this.onChange}/>\r\n            </div>\r\n                <TableContainer className={Styles.container}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell className={Styles.head}>States</TableCell>\r\n                                <TableCell className={Styles.head}>Confirmed</TableCell>\r\n                                <TableCell className={Styles.head}>Active</TableCell>\r\n                                <TableCell className={Styles.head}>Recovered</TableCell>\r\n                                <TableCell className={Styles.head}>Deaths</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this.state.states.filter(searching(this.state.term)).map(States => (\r\n                                <StateTable states={States} key={States.state}/>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>\r\n            </>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default IndiaTable;","import React from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport Router from './Router';\r\nimport Tables from './Tables';\r\nimport IndiaTable from './IndiaTable';\r\n\r\nconst App = () => {\r\n    return(\r\n        <>\r\n        <Switch>\r\n                <Route exact path=\"/\" component={Router} />\r\n                <Route exact path=\"/tables\" component={Tables} />\r\n                <Route exact path=\"/state\" component={IndiaTable}/>\r\n        </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport AddToHomescreen from 'react-add-to-homescreen';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst Click = () => {\n  alert('Add Covid-19 To HomeScreen');\n};\n\nReactDOM.render(\n  <>\n  \n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n    <AddToHomescreen onAddToHomescreenClick={Click}/>\n  </BrowserRouter>\n  </>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}