{"version":3,"sources":["Components/Country/Country.module.css","Table.module.css","Components/Charts/Charts.module.css","Components/Cards/Cards.module.css","Total.module.css","India.module.css","App.module.css","Api/index.js","Components/Cards/Cards.jsx","Components/Charts/Charts.jsx","Components/Country/Country.jsx","Link.jsx","IndiaLink.jsx","Router.jsx","CityLink.jsx","Countries.jsx","Tables.jsx","StateTable.jsx","IndiaTable.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","url","console","log","fetchData","country","a","changeUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","fetchMonthlyData","modifiedData","map","daily","total","date","reportDate","fetchCountries","countries","name","Cards","className","Styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","CardContent","Typography","gutterbuttom","confi","para","cval","varient","start","end","value","duration","separator","Date","toDateString","rval","dval","Charts","useState","setDaily","useEffect","fetchMonthly","lineChart","length","chart","labels","options","legend","display","title","text","fontColor","fontSize","scales","yAxes","ticks","xAxes","BarChart","datasets","label","backgroundColor","Country","countryChange","fetchedCountries","setFetchedCountries","fetchApi","FormControl","NativeSelect","opt","defaultValue","onChange","e","target","i","global","key","useStyle","makeStyles","root","background","color","padding","marginTop","marginBottom","boxShadow","Link","classes","Button","size","countLink","activeClassName","exact","to","margin","IndiaLink","stateLink","Router","state","fetchdData","setState","this","getFullYear","header","span","footer","React","Component","Countries","countriesData","props","TableRow","TableCell","confirm","NewConfirmed","tconfirm","TotalConfirmed","recover","NewRecovered","trecover","TotalRecovered","death","NewDeaths","tdeath","TotalDeaths","Tables","currentDate","loading","term","bind","event","res","Global","search","type","placeholder","TableContainer","Table","TableHead","chead","nchead","tchead","nrhead","trhead","ndhead","tdhead","TableBody","filter","x","toLowerCase","includes","StateTable","states","deltaconfirmed","active","deltarecovered","deltadeaths","IndiaTable","graph","statewise","cases_time_series","Total","cgrid","dconfirmed","tconfirmed","dailyconfirmed","height","style","fill","stroke","agrid","tactive","rgrid","drecovered","trecovered","dailyrecovered","dgrid","ddeaths","tdeaths","dailydeceased","table","shead","ahead","rhead","dhead","States","App","path","City","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","basename","process","onAddToHomescreenClick","alert","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ce852151.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormControl\":\"Country_FormControl__3uUZg\",\"global\":\"Country_global__2f6G_\",\"opt\":\"Country_opt__2bBHj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chead\":\"Table_chead__1hiAK\",\"nchead\":\"Table_nchead__HwRpn\",\"tchead\":\"Table_tchead__2Zf8P\",\"nrhead\":\"Table_nrhead__10Wwt\",\"trhead\":\"Table_trhead__EMCTX\",\"ndhead\":\"Table_ndhead__1VucA\",\"tdhead\":\"Table_tdhead__1R8_T\",\"country\":\"Table_country__ww812\",\"confirm\":\"Table_confirm__38gvK\",\"tconfirm\":\"Table_tconfirm__3xhVy\",\"recover\":\"Table_recover__uSJfW\",\"trecover\":\"Table_trecover__1kKH4\",\"death\":\"Table_death__57Ws9\",\"tdeath\":\"Table_tdeath__3_dz7\",\"container\":\"Table_container__481kb\",\"header\":\"Table_header__1wPCD\",\"span\":\"Table_span__19itR\",\"search\":\"Table_search__3YApa\",\"footer\":\"Table_footer__3s9cV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__17S4b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1TDLq\",\"card\":\"Cards_card__153w0\",\"confirmed\":\"Cards_confirmed__O8c5h\",\"recovered\":\"Cards_recovered__1tYx0\",\"deaths\":\"Cards_deaths__1o1L_\",\"confi\":\"Cards_confi__2tDhr\",\"cval\":\"Cards_cval__swBZS\",\"rval\":\"Cards_rval__2EDnf\",\"dval\":\"Cards_dval__1yFEL\",\"date\":\"Cards_date__26iTp\",\"para\":\"Cards_para__37RDC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Total_container__3CICb\",\"cgrid\":\"Total_cgrid__100cs\",\"agrid\":\"Total_agrid__90fV8\",\"rgrid\":\"Total_rgrid__3YVlb\",\"dgrid\":\"Total_dgrid__2JkGN\",\"confirmed\":\"Total_confirmed__2ZVXB\",\"dconfirmed\":\"Total_dconfirmed__yDehV\",\"tconfirmed\":\"Total_tconfirmed__2qBAA\",\"active\":\"Total_active__1Lcir\",\"tactive\":\"Total_tactive__1mnpV\",\"recovered\":\"Total_recovered__MNNJl\",\"drecovered\":\"Total_drecovered__100pK\",\"trecovered\":\"Total_trecovered__2OiKm\",\"deaths\":\"Total_deaths__2iiWM\",\"ddeaths\":\"Total_ddeaths__26Ycr\",\"tdeaths\":\"Total_tdeaths__G5L0N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"shead\":\"India_shead__2dr-o\",\"chead\":\"India_chead__3FSq1\",\"ahead\":\"India_ahead__2hFxV\",\"rhead\":\"India_rhead__eMtjb\",\"dhead\":\"India_dhead__T0V-C\",\"container\":\"India_container__1DZax\",\"state\":\"India_state__oTYRp\",\"confirmed\":\"India_confirmed__10Srm\",\"active\":\"India_active__R1CsO\",\"recovered\":\"India_recovered__1XeIZ\",\"deaths\":\"India_deaths__3103z\",\"header\":\"India_header__jz2cm\",\"span\":\"India_span__3ma0h\",\"search\":\"India_search__3VAYS\",\"footer\":\"India_footer__3ctVx\",\"ccontainer\":\"India_ccontainer__3Cxht\",\"cconfirmed\":\"India_cconfirmed__V1EtM\",\"crecovered\":\"India_crecovered__2GjIR\",\"cdeath\":\"India_cdeath__kfAnv\",\"cactive\":\"India_cactive__9270D\",\"dconfirmed\":\"India_dconfirmed__1FEJX\",\"drecovered\":\"India_drecovered__2ppq1\",\"ddeath\":\"India_ddeath__2hjtz\",\"dactive\":\"India_dactive__1pAOZ\",\"aactive\":\"India_aactive__2uID1\",\"aconfirmed\":\"India_aconfirmed__3CT9N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3lOPe\",\"header\":\"App_header__3p3WG\",\"span\":\"App_span__C5smL\",\"footer\":\"App_footer__3enXk\",\"countLink\":\"App_countLink__1eJW9\",\"stateLink\":\"App_stateLink__WOhpw\"};","import axios from 'axios';\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\nconsole.log(url)\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeUrl = url;\r\n\r\n    if(country){\r\n        changeUrl =  `${url}/countries/${country}`;\r\n    }\r\n\r\n    try {\r\n        const { data:{confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeUrl);\r\n        \r\n        return{confirmed, recovered, deaths, lastUpdate};\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchMonthlyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData = data.map((daily) => ({\r\n            confirmed:daily.confirmed.total,\r\n            deaths:daily.deaths.total,\r\n            date:daily.reportDate,\r\n        }));\r\n        \r\n        return modifiedData;\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data : { countries } } = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country) => country.name)\r\n    } catch (error) {\r\n        \r\n    }\r\n}","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid, } from '@material-ui/core';\r\nimport Styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\nimport {fetchMonthlyData} from '../../Api';\r\nimport { Sparklines, SparklinesLine } from 'react-sparklines';\r\n\r\nconst Cards = ({ data : { confirmed, recovered, deaths, lastUpdate } }) => {\r\n\r\n    if(!confirmed){\r\n        return 'Loading...';\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <div className={Styles.container}>\r\n            <Grid container spacing={1} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(Styles.card, Styles.confirmed)}>\r\n                    <CardContent >\r\n                        <Typography gutterbuttom className={Styles.confi}>Confirmed</Typography>\r\n                        <Typography className={Styles.para}>Number of Confirmed Covid-19 cases</Typography>\r\n                        <Typography className={Styles.cval} varient=\"h5\">\r\n                            <CountUp\r\n                                start={0}\r\n                                end={confirmed.value}\r\n                                duration={2.5}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography className={Styles.date}>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        \r\n                        {/* <Sparklines data={confirmed.value}>\r\n                            <SparklinesLine color=\"red\" />\r\n                        </Sparklines> */}\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={cx(Styles.card, Styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography gutterbuttom className={Styles.confi}>Recovered</Typography>\r\n                        <Typography className={Styles.para}>Number of people Recovered from Covid-19</Typography>\r\n                        <Typography className={Styles.rval} varient=\"h5\">\r\n                        <CountUp\r\n                                start={0}\r\n                                end={recovered.value}\r\n                                duration={2.5}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography className={Styles.date}>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        \r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={cx(Styles.card, Styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography className={Styles.confi} gutterbuttom>Deaths</Typography>\r\n                        <Typography className={Styles.para}>Number of Deaths caused by Covid-19</Typography>\r\n                        <Typography className={Styles.dval} varient=\"h5\">\r\n                        <CountUp\r\n                                start={0}\r\n                                end={deaths.value}\r\n                                duration={2.5}\r\n                                separator=\",\"\r\n                            />\r\n                            \r\n                        </Typography>\r\n                        <Typography className={Styles.date}>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        \r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Cards;","import React, { useState, useEffect } from 'react';\r\nimport {fetchMonthlyData} from '../../Api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport { red } from '@material-ui/core/colors';\r\nimport Styles from './Charts.module.css';\r\nimport { Sparklines, SparklinesLine } from 'react-sparklines';\r\n\r\nconst Charts = ( {data: { confirmed, recovered, deaths}, country}) => {\r\n    const[daily, setDaily] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchMonthly = async () => {\r\n            setDaily(await fetchMonthlyData());  \r\n\r\n        }\r\n\r\n        fetchMonthly();\r\n    },[]);\r\n\r\n    const lineChart = (\r\n        daily.length\r\n        ? (\r\n            <Bar className={Styles.chart}\r\n            data={{\r\n                labels:daily.map(({date}) => date),\r\n                labels:['Confirmed','Recovered', 'Deaths'],\r\n                    datasets: [{\r\n                    data: daily.map(({confirmed}) => confirmed),\r\n                    data: daily.map(({recovered}) => recovered),\r\n                    data: daily.map(({deaths}) => deaths), \r\n                    backgroundColor:[\"red\",'green','grey'],\r\n                    data:[confirmed.value, recovered.value,deaths.value], \r\n                    fill:true,\r\n                }],\r\n            }}\r\n                options={{\r\n                    legend: { display: false },\r\n                    title: { display: true, text:`current state in the world`, fontColor:'black', fontSize:16,\r\n                                },\r\n                    scales: {\r\n                        yAxes: [{\r\n                            ticks:{\r\n                                fontColor:'black',\r\n                                        }\r\n                                }],\r\n                                xAxes: [{\r\n                                    ticks:{\r\n                                fontColor:'black',\r\n                                fontSize:18,\r\n                                        }\r\n                                }],\r\n                            },\r\n                }}\r\n        />) : null\r\n    )\r\n\r\n    const BarChart = (\r\n        confirmed\r\n        ? (\r\n            <Bar \r\n                data={{\r\n                    labels:['Confirmed', 'Recovered', 'Deaths'],\r\n                    datasets:[{\r\n                        label:\"people\",\r\n                        backgroundColor: ['red','green','grey'],\r\n                        data:[confirmed.value, recovered.value, deaths.value]\r\n                    }],\r\n                    \r\n                }}\r\n                options={{\r\n                    legend: { display: false },\r\n                    title: { display: true, text:`current state in ${country}`},\r\n                }}\r\n            /> ): null\r\n    )\r\n\r\n    return(\r\n        <>\r\n        <div className={Styles.container}>\r\n            {country ? BarChart : lineChart}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Charts;","import React, { useState, useEffect } from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core';\r\nimport { fetchCountries } from '../../Api';\r\nimport Styles from './Country.module.css';\r\n\r\nconst Country = ({ countryChange }) => {\r\n\r\n    const[fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            setFetchedCountries( await fetchCountries());\r\n        }\r\n\r\n        fetchApi();\r\n    },[setFetchedCountries]);\r\n\r\n    return(\r\n        <>\r\n        <FormControl className={Styles.FormControl}>\r\n            <NativeSelect className={Styles.opt} defaultValue=\"\" onChange={(e) => countryChange(e.target.value)} >\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, i) => <option className={Styles.global} key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Country;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Styles from './App.module.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyle = makeStyles({\r\n    root:{\r\n        background:'#455a64',\r\n        color: 'white',\r\n        padding:'10px 40px',\r\n        marginTop: '20px',\r\n        marginBottom:'70px',\r\n        boxShadow: '0 5px 5px 0 black',\r\n        \"&:hover\": {\r\n            backgroundColor: \"grey\",\r\n        }\r\n    },\r\n    label:{\r\n        color:'white',\r\n        fontSize:'20px',\r\n    }\r\n}) \r\n\r\nconst Link = () => {\r\n    const classes = useStyle();\r\n    return(\r\n        <>\r\n        <Button size=\"large\" classes={{root:classes.root, label: classes.label}}>\r\n            <NavLink className={Styles.countLink} activeClassName=\"active\" exact to=\"/tables\">Countries Table</NavLink>\r\n        </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Link;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Styles from './App.module.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyle = makeStyles({\r\n    root:{\r\n        background:'#455a64',\r\n        color: 'white',\r\n        padding:'10px 40px',\r\n        margin: '20px 0',\r\n        boxShadow: '0 5px 5px 0 black',\r\n        \"&:hover\": {\r\n            backgroundColor: \"grey\",\r\n        }\r\n    },\r\n    label:{\r\n        color:'white',\r\n        fontSize:'20px',\r\n    }\r\n}) \r\n\r\nconst IndiaLink = () => {\r\n    const classes = useStyle();\r\n    return(\r\n        <>\r\n        <Button size=\"large\" classes={{root:classes.root, label: classes.label}}><NavLink className={Styles.stateLink} activeClassName=\"active\" exact to=\"/state\">India Status</NavLink></Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default IndiaLink;","import React from 'react';\r\nimport { Cards, Charts, Country} from './Components';\r\nimport Styles from './App.module.css';\r\nimport { fetchData } from './Api';\r\nimport Link from './Link';\r\nimport IndiaLink from './IndiaLink';\r\nimport CityLink from './CityLink';\r\n\r\nclass Router extends React.Component {\r\n\r\n    state={\r\n        data: {},\r\n        country: \"\",\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const fetchdData = await fetchData();\r\n        \r\n        this.setState({ data : fetchdData });\r\n    \r\n    }\r\n\r\n    countryChange = async (country) => {\r\n        \r\n        const fetchdData = await fetchData(country);\r\n        this.setState({ data : fetchdData, country:country });\r\n    }\r\n\r\n    render(){\r\n        const {data, country} = this.state;\r\n\r\n        const date = new Date().getFullYear()\r\n\r\n        return(\r\n            <>\r\n            <div className={Styles.header}>\r\n                <p>Covid-<span className={Styles.span}>19</span></p>\r\n            </div>\r\n\r\n            <div className={Styles.container}>\r\n                <Country countryChange={this.countryChange}/>\r\n                <IndiaLink/>\r\n                <Cards data={data}/>\r\n                <Link/>\r\n                <Charts data={data} country={country}/>\r\n            </div>\r\n\r\n            <div className={Styles.footer}>\r\n                <p>Copyright &copy; {date} Covid-19</p>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Router;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Styles from './App.module.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyle = makeStyles({\r\n    root:{\r\n        background:'#455a64',\r\n        color: 'white',\r\n        padding:'10px 40px',\r\n        margin: '20px 0',\r\n        boxShadow: '0 5px 5px 0 black',\r\n        \"&:hover\": {\r\n            backgroundColor: \"grey\",\r\n        }\r\n    },\r\n    label:{\r\n        color:'white',\r\n        fontSize:'20px',\r\n    }\r\n}) \r\n\r\nconst CityLink = () => {\r\n    const classes = useStyle();\r\n    return(\r\n        <>\r\n        <Button size=\"large\" classes={{root:classes.root, label: classes.label}}><NavLink className={Styles.stateLink} activeClassName=\"active\" exact to=\"/district\">India District Status</NavLink></Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CityLink;","import React from 'react';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Styles from './Table.module.css';\r\nimport CountUp from 'react-countup';\r\n\r\nclass Countries extends React.Component{\r\n\r\n    render(){\r\n        const { countriesData } = this.props;\r\n\r\n        return(\r\n            <>\r\n            <TableRow>\r\n                <TableCell className={Styles.country}>{countriesData.Country}</TableCell>\r\n                <TableCell className={Styles.confirm}>\r\n                <CountUp\r\n                        start={0}\r\n                        end={countriesData.NewConfirmed}\r\n                        separator=\",\"\r\n                        duration={2.5}\r\n                    />\r\n                    </TableCell>\r\n                <TableCell className={Styles.tconfirm}>\r\n                <CountUp\r\n                        start={0}\r\n                        end={countriesData.TotalConfirmed}\r\n                        separator=\",\"\r\n                        duration={2.5}\r\n                    />\r\n                    </TableCell>\r\n\r\n                <TableCell className={Styles.recover}>\r\n                <CountUp\r\n                        start={0}\r\n                        end={countriesData.NewRecovered}\r\n                        separator=\",\"\r\n                        duration={2.5}\r\n                    />\r\n                    </TableCell>\r\n\r\n                <TableCell className={Styles.trecover}>\r\n                <CountUp\r\n                        start={0}\r\n                        end={countriesData.TotalRecovered}\r\n                        separator=\",\"\r\n                        duration={2.5}\r\n                    />\r\n                    </TableCell>\r\n\r\n                <TableCell className={Styles.death}>\r\n                <CountUp\r\n                        start={0}\r\n                        end={countriesData.NewDeaths}\r\n                        separator=\",\"\r\n                        duration={2.5}\r\n                    />\r\n                    </TableCell>\r\n\r\n                <TableCell className={Styles.tdeath}>\r\n                <CountUp\r\n                        start={0}\r\n                        end={countriesData.TotalDeaths}\r\n                        separator=\",\"\r\n                        duration={2.5}\r\n                    />\r\n                    </TableCell>\r\n\r\n            </TableRow>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Countries;","import React from 'react';\r\nimport axios from 'axios';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Countries from './Countries';\r\nimport Styles from './Table.module.css';\r\n\r\n\r\nfunction searching(term){\r\n    return function(x){\r\n        return x.Country.toLowerCase().includes(term.toLowerCase()) || !term;\r\n    }\r\n}\r\n\r\nclass Tables extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            countriesData:[],\r\n            term:\"\",\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    onChange(event){\r\n        this.setState({term : event.target.value});\r\n    }\r\n\r\n    state={\r\n        countriesData : [],\r\n        global: [],\r\n        currentDate: null,\r\n        loading: true,\r\n    }\r\n\r\n    async componentDidMount(){\r\n        \r\n        const res = await axios.get(\" https://api.covid19api.com/summary\");\r\n        \r\n        this.setState({countriesData: res.data.Countries});\r\n        this.setState({global: res.data.Global});\r\n        this.setState({currentDate: res.data.Date});\r\n        this.setState({loading: false});\r\n    }\r\n\r\n    render(){\r\n        const {data, country} = this.state;\r\n\r\n        const date = new Date().getFullYear()\r\n\r\n        if(this.state.loading){\r\n            return(\r\n                <h1>Loading...</h1>\r\n            )\r\n        }\r\n\r\n        return(\r\n            <>\r\n            <div className={Styles.header}>\r\n                <p>Covid-<span className={Styles.span}>19</span></p>\r\n            </div>\r\n            <div className={Styles.search}>\r\n                <input type='text' placeholder='Search...' onChange={this.onChange}/>\r\n            </div>\r\n                <div>\r\n                    <TableContainer className={Styles.container}>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell className={Styles.chead}>Countries</TableCell>\r\n                                    <TableCell className={Styles.nchead}>New Confirmed Cases</TableCell>\r\n                                    <TableCell className={Styles.tchead}>Total Confirmed Cases</TableCell>\r\n                                    <TableCell className={Styles.nrhead}>New Recovered</TableCell>\r\n                                    <TableCell className={Styles.trhead}>Total Recovered</TableCell>\r\n                                    <TableCell className={Styles.ndhead}>New Deaths</TableCell>\r\n                                    <TableCell className={Styles.tdhead}>Total Deaths</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {this.state.countriesData.filter(searching(this.state.term)).map(country => (\r\n                                    <Countries countriesData={country} key={country.Country}/>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </div>\r\n\r\n                <div className={Styles.footer}>\r\n                <p>Copyright &copy; {date} Covid-19</p>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Tables;","import React from 'react';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Styles from './India.module.css';\r\nimport CountUp from 'react-countup';\r\nimport {Grid as GridTable, TableFixedColumns} from '@devexpress/dx-react-grid-material-ui';\r\n\r\nclass StateTable extends React.Component{\r\n\r\n    render(){\r\n\r\n        const { states } = this.props;\r\n        return(\r\n            <>\r\n            <TableRow>\r\n                    <TableCell className={Styles.state}>{states.state}</TableCell>\r\n                    <TableCell className={Styles.confirmed}>🡹\r\n                <CountUp\r\n                        start={0}\r\n                        end={states.deltaconfirmed}\r\n                        separator=\",\"\r\n                        duration={2.5}\r\n                    /><br/>\r\n                \r\n                    <CountUp\r\n                        start={0}\r\n                        end={states.confirmed}\r\n                        separator=\",\"\r\n                        duration={2.5}\r\n                    />\r\n                </TableCell>\r\n\r\n                <TableCell className={Styles.active}>\r\n                \r\n                    <CountUp\r\n                        start={0}\r\n                        end={states.active}\r\n                        separator=\",\"\r\n                        duration={1}\r\n                    /></TableCell>\r\n\r\n                <TableCell className={Styles.recovered}>🡹\r\n                <CountUp\r\n                        start={0}\r\n                        end={states.deltarecovered}\r\n                        separator=\",\"\r\n                        duration={1}\r\n                    /><br/>\r\n                \r\n                    <CountUp\r\n                        start={0}\r\n                        end={states.recovered}\r\n                        separator=\",\"\r\n                        duration={1}\r\n                    />\r\n                    </TableCell>\r\n\r\n                <TableCell className={Styles.deaths}>🡹\r\n                <CountUp\r\n                        start={0}\r\n                        end={states.deltadeaths}\r\n                        separator=\",\"\r\n                        duration={1}\r\n                    /><br/>\r\n                \r\n                    <CountUp\r\n                        start={0}\r\n                        end={states.deaths}\r\n                        separator=\",\"\r\n                        duration={1}\r\n                    />\r\n                 </TableCell>\r\n\r\n            </TableRow>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StateTable;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { render } from '@testing-library/react';\r\nimport StateTable from './StateTable';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Styles from './India.module.css'; \r\nimport CountUp from 'react-countup';\r\nimport { Card, CardContent, Typography, Grid, } from '@material-ui/core';\r\nimport { Sparklines, SparklinesLine, SparklinesSpots } from 'react-sparklines';\r\nimport Total from './Total.module.css'\r\n\r\nconst url=\"https://api.covid19india.org/data.json\";\r\n\r\nconst searching = (term) => {\r\n        return function(x){\r\n            return x.state.toLowerCase().includes(term.toLowerCase()) || !term;\r\n        }\r\n}\r\n\r\nclass IndiaTable extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            states:[],\r\n            total:[],\r\n            graph:[],\r\n            term:\"\",\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    onChange = (e) =>{\r\n        this.setState({term: e.target.value});\r\n    }\r\n\r\n    async componentDidMount(){\r\n\r\n        const res = await axios.get(url);\r\n        console.log(res)\r\n    \r\n        this.setState({states: res.data.statewise});\r\n        this.setState({total: res.data.statewise[0]});\r\n        this.setState({graph: res.data.cases_time_series});\r\n        this.setState({loading:false});\r\n        \r\n    }\r\n\r\n    render(){\r\n    \r\n        const date = new Date().getFullYear()\r\n\r\n        if(this.state.loading){\r\n            return <h1>loaging...</h1>\r\n        }\r\n        \r\n        return(\r\n            <>\r\n    \r\n            \r\n            <div className={Styles.header}>\r\n                <p>Covid-<span className={Styles.span}>19</span></p>\r\n            </div>\r\n\r\n            <div className={Styles.search}>\r\n                <input type='text' placeholder='Search...' onChange={this.onChange}/>\r\n            </div>\r\n\r\n            <div className={Total.container}> \r\n                    <div className={Total.cgrid}>\r\n                        <Typography className={Total.confirmed}>Confirmed</Typography>\r\n                        <Typography className={Total.dconfirmed}>🡹{this.state.total.deltaconfirmed}</Typography>\r\n                        <Typography className={Total.tconfirmed}>{this.state.total.confirmed}</Typography>\r\n                        <Sparklines data={this.state.graph.map((chart) => chart.dailyconfirmed)} height={180} margin={8}>\r\n                            <SparklinesLine color=\"red\" style={{ fill: \"red\" }} />\r\n                            <SparklinesSpots size={4} style={{stroke: 'red', fill: \"red\" }} />\r\n                        </Sparklines>\r\n                    </div>\r\n                \r\n                    <div className={Total.agrid}>\r\n                        <Typography className={Total.active}>Active</Typography>\r\n                        <Typography className={Total.tactive}>_</Typography>\r\n                        <Typography className={Total.tactive}>{this.state.total.active}</Typography>\r\n                        <Typography className={Total.tactive}>_</Typography>\r\n                    </div>\r\n\r\n               \r\n                    <div className={Total.rgrid}>\r\n                        <Typography className={Total.recovered}>Recovered</Typography>\r\n                        <Typography className={Total.drecovered}>🡹{this.state.total.deltarecovered}</Typography>\r\n                        <Typography className={Total.trecovered}>{this.state.total.recovered}</Typography>\r\n                        <Sparklines data={this.state.graph.map((chart) => chart.dailyrecovered)} height={180} margin={8}>\r\n                            <SparklinesLine color=\"green\" style={{ fill: \"green\" }}  />\r\n                            <SparklinesSpots size={4} style={{stroke: 'green', fill: \"green\" }} />\r\n                        </Sparklines>\r\n                    </div>\r\n\r\n                    <div className={Total.dgrid}>\r\n                        <Typography className={Total.deaths}>Deaths</Typography>\r\n                        <Typography className={Total.ddeaths}>🡹{this.state.total.deltadeaths}</Typography>\r\n                        <Typography className={Total.tdeaths}>{this.state.total.deaths}</Typography>\r\n                        <Sparklines data={this.state.graph.map((chart) => chart.dailydeceased)} height={180} margin={8}>\r\n                            <SparklinesLine color=\"grey\" style={{ fill: \"grey\" }}  />\r\n                            <SparklinesSpots size={4} style={{stroke: 'grey', fill: \"grey\" }} />\r\n                        </Sparklines>\r\n                    </div> \r\n                \r\n                    \r\n            </div>\r\n                \r\n                <TableContainer className={Styles.container}>\r\n                    <Table className={Styles.table}>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell className={Styles.shead}>States</TableCell>\r\n                                <TableCell className={Styles.chead}>Confirmed</TableCell>\r\n                                <TableCell className={Styles.ahead}>Active</TableCell>\r\n                                <TableCell className={Styles.rhead}>Recovered</TableCell>\r\n                                <TableCell className={Styles.dhead}>Deaths</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this.state.states.filter(searching(this.state.term)).map(States => (\r\n                                <StateTable states={States} key={States.state}/>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            \r\n\r\n            <div className={Styles.footer}>\r\n                <p>Copyright &copy; {date} Covid-19</p>\r\n            </div>\r\n            </>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default IndiaTable;","import React from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport Router from './Router';\r\nimport Tables from './Tables';\r\nimport IndiaTable from './IndiaTable';\r\nimport City from './City';\r\n\r\nconst App = () => {\r\n    return(\r\n        <>\r\n        <Switch>\r\n                <Route exact path=\"/\" component={Router} />\r\n                <Route exact path=\"/tables\" component={Tables} />\r\n                <Route exact path=\"/state\" component={IndiaTable}/>\r\n                <Route exact path=\"/district\" component={City}/>\r\n        </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport AddToHomescreen from 'react-add-to-homescreen';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst Click = () => {\n  alert('Add Covid-19 To HomeScreen');\n};\n\nReactDOM.render(\n  <>\n  \n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n    <AddToHomescreen onAddToHomescreenClick={Click}/>\n  </BrowserRouter>\n  </>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}