{"version":3,"sources":["India.module.css","Components/Cards/Cards.module.css","Components/Country/Country.module.css","Components/Charts/Charts.module.css","Total.module.css","App.module.css","Components/Cards/Cards.jsx","Api/index.js","Components/Charts/Charts.jsx","Components/Country/Country.jsx","Link.jsx","IndiaLink.jsx","Router.jsx","CityLink.jsx","Countries.jsx","Tables.jsx","StateTable.jsx","IndiaTable.jsx","App.js","serviceWorker.js","index.js","Table.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","Grid","container","spacing","justify","item","component","Card","xs","md","CardContent","Typography","gutterbuttom","Styles","cval","varient","start","end","value","duration","separator","Date","toDateString","rval","dval","url","console","log","fetchData","country","a","changeUrl","axios","get","fetchMonthlyData","modifiedData","map","daily","total","date","reportDate","fetchCountries","countries","name","Charts","useState","setDaily","useEffect","fetchMonthly","lineChart","length","chart","labels","options","legend","display","title","text","fontColor","fontSize","scales","yAxes","ticks","xAxes","BarChart","datasets","label","backgroundColor","Country","countryChange","fetchedCountries","setFetchedCountries","fetchApi","FormControl","NativeSelect","opt","defaultValue","onChange","e","target","i","global","key","useStyle","makeStyles","root","background","color","padding","marginTop","marginBottom","boxShadow","Link","classes","Button","size","countLink","activeClassName","exact","to","margin","IndiaLink","stateLink","Router","state","fetchdData","setState","this","getFullYear","span","React","Component","Countries","countriesData","props","TableRow","TableCell","NewConfirmed","TotalConfirmed","NewRecovered","TotalRecovered","NewDeaths","TotalDeaths","Tables","currentDate","loading","term","bind","event","res","Global","search","type","placeholder","TableContainer","Table","TableHead","TableBody","filter","x","toLowerCase","includes","StateTable","states","deltaconfirmed","active","deltarecovered","deltadeaths","IndiaTable","graph","statewise","cases_time_series","Total","cgrid","dconfirmed","tconfirmed","dailyconfirmed","height","style","fill","stroke","agrid","tactive","rgrid","drecovered","trecovered","dailyrecovered","dgrid","ddeaths","tdeaths","dailydeceased","table","States","getPre","window","matchMedia","matches","App","isReturn","localStorage","Saved","JSON","parse","getItem","Prefered","getIntitalValue","darkMode","setDark","setItem","stringify","onClick","prevmode","path","City","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","basename","process","onAddToHomescreenClick","alert","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.03a089d3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"India_span__3ma0h\",\"search\":\"India_search__3VAYS\",\"container\":\"India_container__1DZax\",\"state\":\"India_state__oTYRp\",\"shead\":\"India_shead__2dr-o\",\"chead\":\"India_chead__3FSq1\",\"confirmed\":\"India_confirmed__10Srm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cval\":\"Cards_cval__swBZS\",\"rval\":\"Cards_rval__2EDnf\",\"dval\":\"Cards_dval__1yFEL\",\"Ccontainer\":\"Cards_Ccontainer__o2f_Y\",\"card\":\"Cards_card__153w0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormControl\":\"Country_FormControl__3uUZg\",\"global\":\"Country_global__2f6G_\",\"opt\":\"Country_opt__2bBHj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__17S4b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Total_container__3CICb\",\"cgrid\":\"Total_cgrid__100cs\",\"agrid\":\"Total_agrid__90fV8\",\"rgrid\":\"Total_rgrid__3YVlb\",\"dgrid\":\"Total_dgrid__2JkGN\",\"confirmed\":\"Total_confirmed__2ZVXB\",\"dconfirmed\":\"Total_dconfirmed__yDehV\",\"tconfirmed\":\"Total_tconfirmed__2qBAA\",\"active\":\"Total_active__1Lcir\",\"tactive\":\"Total_tactive__1mnpV\",\"recovered\":\"Total_recovered__MNNJl\",\"drecovered\":\"Total_drecovered__100pK\",\"trecovered\":\"Total_trecovered__2OiKm\",\"deaths\":\"Total_deaths__2iiWM\",\"ddeaths\":\"Total_ddeaths__26Ycr\",\"tdeaths\":\"Total_tdeaths__G5L0N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"App_span__C5smL\",\"countLink\":\"App_countLink__1eJW9\",\"stateLink\":\"App_stateLink__WOhpw\",\"header\":\"App_header__3p3WG\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid, Paper } from '@material-ui/core';\r\nimport Styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\n\r\nconst url='https://covid19.mathdro.id/api/daily';\r\n\r\nconst Cards = ({ data : { confirmed, recovered, deaths, lastUpdate } }) => {\r\n\r\n    if(!confirmed){\r\n        return 'Loading...';\r\n    }\r\n\r\n    return(\r\n        <>\r\n    {/* <Paper> */}\r\n        <div className='Ccontainer'>\r\n            <Grid container spacing={1} justify=\"center\">\r\n\r\n                <Grid item component={Card} xs={12} md={3} className='card'>\r\n                    <CardContent >\r\n                        <Typography gutterbuttom className='confi'>Confirmed</Typography>\r\n                        <Typography className='para'>Number of Confirmed Covid-19 cases</Typography>\r\n                        <Typography className={Styles.cval} varient=\"h5\">\r\n                            <CountUp\r\n                                start={0}\r\n                                end={confirmed.value}\r\n                                duration={2.5}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography className='date'>{new Date(lastUpdate).toDateString()}</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className='card'>\r\n                    <CardContent>\r\n                        <Typography gutterbuttom className='confi'>Recovered</Typography>\r\n                        <Typography className='para'>Number of people Recovered from Covid-19</Typography>\r\n                        <Typography className={Styles.rval} varient=\"h5\">\r\n                        <CountUp\r\n                                start={0}\r\n                                end={recovered.value}\r\n                                duration={2.5}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography className='date'>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        \r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className='card'>\r\n                    <CardContent>\r\n                        <Typography className='confi' gutterbuttom>Deaths</Typography>\r\n                        <Typography className='para'>Number of Deaths caused by Covid-19</Typography>\r\n                        <Typography className={Styles.dval} varient=\"h5\">\r\n                        <CountUp\r\n                                start={0}\r\n                                end={deaths.value}\r\n                                duration={2.5}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography className='date'>{new Date(lastUpdate).toDateString()}</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </div>\r\n    {/* </Paper> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\nconsole.log(url)\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeUrl = url;\r\n\r\n    if(country){\r\n        changeUrl =  `${url}/countries/${country}`;\r\n    }\r\n\r\n    try {\r\n        const { data:{confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeUrl);\r\n        \r\n        return{confirmed, recovered, deaths, lastUpdate};\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchMonthlyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData = data.map((daily) => ({\r\n            confirmed:daily.confirmed.total,\r\n            deaths:daily.deaths.total,\r\n            date:daily.reportDate,\r\n        }));\r\n        \r\n        return modifiedData;\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data : { countries } } = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country) => country.name)\r\n    } catch (error) {\r\n        \r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport {fetchMonthlyData} from '../../Api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport { red } from '@material-ui/core/colors';\r\nimport Styles from './Charts.module.css';\r\nimport { Sparklines, SparklinesLine, SparklinesSpots } from 'react-sparklines';\r\n\r\nconst Charts = ( {data: { confirmed, recovered, deaths}, country}) => {\r\n    const[daily, setDaily] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchMonthly = async () => {\r\n            setDaily(await fetchMonthlyData());  \r\n\r\n        }\r\n\r\n        fetchMonthly();\r\n    },[]);\r\n\r\n    const lineChart = (\r\n        daily.length\r\n        ? (\r\n            <Bar className={Styles.chart}\r\n            data={{\r\n                labels:daily.map(({date}) => date),\r\n                labels:['Confirmed','Recovered', 'Deaths'],\r\n                    datasets: [{\r\n                    data: daily.map(({confirmed}) => confirmed),\r\n                    data: daily.map(({recovered}) => recovered),\r\n                    data: daily.map(({deaths}) => deaths), \r\n                    backgroundColor:[\"red\",'green','grey'],\r\n                    data:[confirmed.value, recovered.value,deaths.value], \r\n                    fill:true,\r\n                }],\r\n            }}\r\n                options={{\r\n                    legend: { display: false },\r\n                    title: { display: true, text:`current status in the world`, fontColor:'grey', fontSize:16,\r\n                                },\r\n                    scales: {\r\n                        yAxes: [{\r\n                            ticks:{\r\n                                fontColor:'grey',\r\n                                \r\n                                        }\r\n                                }],\r\n                                xAxes: [{\r\n                                    ticks:{\r\n                                fontColor:'grey',\r\n                                fontSize:14,\r\n                                        }\r\n                                }],\r\n                            },\r\n                }}\r\n        />\r\n        ) : null\r\n    )\r\n\r\n    const BarChart = (\r\n        confirmed\r\n        ? (\r\n            <Bar \r\n                data={{\r\n                    labels:['Confirmed', 'Recovered', 'Deaths'],\r\n                    datasets:[{\r\n                        label:\"people\",\r\n                        backgroundColor: ['red','green','grey'],\r\n                        data:[confirmed.value, recovered.value, deaths.value]\r\n                    }],\r\n                    \r\n                }}\r\n                options={{\r\n                    legend: { display: false },\r\n                    title: { display: true, text:`current status in ${country}`},\r\n                }}\r\n            /> ): null\r\n    )\r\n\r\n    return(\r\n        <>\r\n        <div className={Styles.container}>\r\n            {country ? BarChart : lineChart}\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Charts;","import React, { useState, useEffect } from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core';\r\nimport { fetchCountries } from '../../Api';\r\nimport Styles from './Country.module.css';\r\n\r\nconst Country = ({ countryChange }) => {\r\n\r\n    const[fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            setFetchedCountries( await fetchCountries());\r\n        }\r\n\r\n        fetchApi();\r\n    },[setFetchedCountries]);\r\n\r\n    return(\r\n        <>\r\n        <FormControl className={Styles.FormControl}>\r\n            <NativeSelect className={Styles.opt} defaultValue=\"\" onChange={(e) => countryChange(e.target.value)} >\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, i) => <option className={Styles.global} key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Country;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Styles from './App.module.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyle = makeStyles({\r\n    root:{\r\n        background:'#455a64',\r\n        color: 'white',\r\n        padding:'10px 40px',\r\n        marginTop: '20px',\r\n        marginBottom:'70px',\r\n        boxShadow: '0 5px 5px 0 black',\r\n        \"&:hover\": {\r\n            backgroundColor: \"grey\",\r\n        }\r\n    },\r\n    label:{\r\n        color:'white',\r\n        fontSize:'20px',\r\n    }\r\n}) \r\n\r\nconst Link = () => {\r\n    const classes = useStyle();\r\n    return(\r\n        <>\r\n        <Button size=\"large\" classes={{root:classes.root, label: classes.label}}>\r\n            <NavLink className={Styles.countLink} activeClassName=\"active\" exact to=\"/tables\">Countries Table</NavLink>\r\n        </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Link;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Styles from './App.module.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyle = makeStyles({\r\n    root:{\r\n        background:'#455a64',\r\n        color: 'white',\r\n        padding:'10px 40px',\r\n        margin: '20px 0',\r\n        boxShadow: '0 5px 5px 0 black',\r\n        \"&:hover\": {\r\n            backgroundColor: \"grey\",\r\n        }\r\n    },\r\n    label:{\r\n        color:'white',\r\n        fontSize:'20px',\r\n    }\r\n}) \r\n\r\nconst IndiaLink = () => {\r\n    const classes = useStyle();\r\n    return(\r\n        <>\r\n        <Button size=\"large\" classes={{root:classes.root, label: classes.label}}><NavLink className={Styles.stateLink} activeClassName=\"active\" exact to=\"/state\">India Status</NavLink></Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default IndiaLink;","import React from 'react';\r\nimport { Cards, Charts, Country} from './Components';\r\nimport Styles from './App.module.css';\r\nimport { fetchData } from './Api';\r\nimport Link from './Link';\r\nimport IndiaLink from './IndiaLink';\r\nimport CityLink from './CityLink';\r\nimport { Card, CardContent, Typography, Grid, Paper } from '@material-ui/core';\r\n\r\nclass Router extends React.Component {\r\n\r\n    state={\r\n        data: {},\r\n        country: \"\",\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const fetchdData = await fetchData();\r\n        \r\n        this.setState({ data : fetchdData });\r\n    \r\n    }\r\n\r\n    countryChange = async (country) => {\r\n        \r\n        const fetchdData = await fetchData(country);\r\n        this.setState({ data : fetchdData, country:country });\r\n    }\r\n\r\n    render(){\r\n        const {data, country} = this.state;\r\n\r\n        const date = new Date().getFullYear()\r\n\r\n        return(\r\n            <>\r\n            \r\n            <div className='header'>\r\n                <p>Covid-<span className={Styles.span}>19</span></p>\r\n            </div>\r\n\r\n            <div className='mcontainer'>\r\n                <Country countryChange={this.countryChange}/>\r\n                <IndiaLink/>\r\n                <Cards data={data}/>\r\n                <Link/>\r\n                <Charts data={data} country={country}/>\r\n            </div>\r\n\r\n            <div className='footer'>\r\n                <p>Copyright &copy; {date} Covid-19</p>\r\n            </div>\r\n            \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Router;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Styles from './App.module.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyle = makeStyles({\r\n    root:{\r\n        background:'#455a64',\r\n        color: 'white',\r\n        padding:'10px 40px',\r\n        margin: '20px 0',\r\n        boxShadow: '0 5px 5px 0 black',\r\n        \"&:hover\": {\r\n            backgroundColor: \"grey\",\r\n        }\r\n    },\r\n    label:{\r\n        color:'white',\r\n        fontSize:'20px',\r\n    }\r\n}) \r\n\r\nconst CityLink = () => {\r\n    const classes = useStyle();\r\n    return(\r\n        <>\r\n        <Button size=\"large\" classes={{root:classes.root, label: classes.label}}><NavLink className={Styles.stateLink} activeClassName=\"active\" exact to=\"/district\">India District Status</NavLink></Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CityLink;","import React from 'react';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Styles from './Table.module.css';\r\nimport CountUp from 'react-countup';\r\n\r\nclass Countries extends React.Component{\r\n\r\n    render(){\r\n        const { countriesData } = this.props;\r\n\r\n        return(\r\n            <>\r\n            <TableRow>\r\n                <TableCell className='country'>{countriesData.Country}</TableCell>\r\n                <TableCell className='confirm'>\r\n                <CountUp\r\n                        start={0}\r\n                        end={countriesData.NewConfirmed}\r\n                        separator=\",\"\r\n                        duration={2.5}\r\n                    />\r\n                    </TableCell>\r\n                <TableCell className='tconfirm'>\r\n                <CountUp\r\n                        start={0}\r\n                        end={countriesData.TotalConfirmed}\r\n                        separator=\",\"\r\n                        duration={2.5}\r\n                    />\r\n                    </TableCell>\r\n\r\n                <TableCell className='recover'>\r\n                <CountUp\r\n                        start={0}\r\n                        end={countriesData.NewRecovered}\r\n                        separator=\",\"\r\n                        duration={2.5}\r\n                    />\r\n                    </TableCell>\r\n\r\n                <TableCell className='trecover'>\r\n                <CountUp\r\n                        start={0}\r\n                        end={countriesData.TotalRecovered}\r\n                        separator=\",\"\r\n                        duration={2.5}\r\n                    />\r\n                    </TableCell>\r\n\r\n                <TableCell className='death'>\r\n                <CountUp\r\n                        start={0}\r\n                        end={countriesData.NewDeaths}\r\n                        separator=\",\"\r\n                        duration={2.5}\r\n                    />\r\n                    </TableCell>\r\n\r\n                <TableCell className='tdeath'>\r\n                <CountUp\r\n                        start={0}\r\n                        end={countriesData.TotalDeaths}\r\n                        separator=\",\"\r\n                        duration={2.5}\r\n                    />\r\n                    </TableCell>\r\n\r\n            </TableRow>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Countries;","import React from 'react';\r\nimport axios from 'axios';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Countries from './Countries';\r\nimport Styles from './Table.module.css';\r\n\r\n\r\nfunction searching(term){\r\n    return function(x){\r\n        return x.Country.toLowerCase().includes(term.toLowerCase()) || !term;\r\n    }\r\n}\r\n\r\nclass Tables extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            countriesData:[],\r\n            term:\"\",\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    onChange(event){\r\n        this.setState({term : event.target.value});\r\n    }\r\n\r\n    state={\r\n        countriesData : [],\r\n        global: [],\r\n        currentDate: null,\r\n        loading: true,\r\n    }\r\n\r\n    async componentDidMount(){\r\n        \r\n        const res = await axios.get(\" https://api.covid19api.com/summary\");\r\n        \r\n        this.setState({countriesData: res.data.Countries});\r\n        this.setState({global: res.data.Global});\r\n        this.setState({currentDate: res.data.Date});\r\n        this.setState({loading: false});\r\n    }\r\n\r\n    render(){\r\n        const {data, country} = this.state;\r\n\r\n        const date = new Date().getFullYear()\r\n\r\n        if(this.state.loading){\r\n            return(\r\n                <h1>Loading...</h1>\r\n            )\r\n        }\r\n\r\n        return(\r\n            <>\r\n            <div className='header'>\r\n                <p>Covid-<span className={Styles.span}>19</span></p>\r\n            </div>\r\n            <div className={Styles.search}>\r\n                <input type='text' placeholder='Search...' onChange={this.onChange}/>\r\n            </div>\r\n                <div>\r\n                    <TableContainer className={Styles.container}>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell className='Chead'>Countries</TableCell>\r\n                                    <TableCell className='nchead'>New Confirmed Cases</TableCell>\r\n                                    <TableCell className='tchead'>Total Confirmed Cases</TableCell>\r\n                                    <TableCell className='nrhead'>New Recovered</TableCell>\r\n                                    <TableCell className='trhead'>Total Recovered</TableCell>\r\n                                    <TableCell className='ndhead'>New Deaths</TableCell>\r\n                                    <TableCell className='tdhead'>Total Deaths</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {this.state.countriesData.filter(searching(this.state.term)).map(country => (\r\n                                    <Countries countriesData={country} key={country.Country}/>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </div>\r\n\r\n                <div className='footer'>\r\n                <p>Copyright &copy; {date} Covid-19</p>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Tables;","import React from 'react';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Styles from './India.module.css';\r\nimport CountUp from 'react-countup';\r\nimport {Grid as GridTable, TableFixedColumns} from '@devexpress/dx-react-grid-material-ui';\r\n\r\nclass StateTable extends React.Component{\r\n\r\n    render(){\r\n\r\n        const { states } = this.props;\r\n        return(\r\n            <>\r\n            <TableRow>\r\n                    <TableCell className='state'>{states.state}</TableCell>\r\n                    <TableCell className='confirmed'>🡱\r\n                <CountUp\r\n                        start={0}\r\n                        end={states.deltaconfirmed}\r\n                        separator=\",\"\r\n                        duration={2.5}\r\n                    /><br/>\r\n                \r\n                    <CountUp\r\n                        start={0}\r\n                        end={states.confirmed}\r\n                        separator=\",\"\r\n                        duration={2.5}\r\n                    />\r\n                </TableCell>\r\n\r\n                <TableCell className='active'>\r\n                \r\n                    <CountUp\r\n                        start={0}\r\n                        end={states.active}\r\n                        separator=\",\"\r\n                        duration={1}\r\n                    /></TableCell>\r\n\r\n                <TableCell className='recovered'>🡱\r\n                <CountUp\r\n                        start={0}\r\n                        end={states.deltarecovered}\r\n                        separator=\",\"\r\n                        duration={1}\r\n                    /><br/>\r\n                \r\n                    <CountUp\r\n                        start={0}\r\n                        end={states.recovered}\r\n                        separator=\",\"\r\n                        duration={1}\r\n                    />\r\n                    </TableCell>\r\n\r\n                <TableCell className='deaths'>🡱\r\n                <CountUp\r\n                        start={0}\r\n                        end={states.deltadeaths}\r\n                        separator=\",\"\r\n                        duration={1}\r\n                    /><br/>\r\n                \r\n                    <CountUp\r\n                        start={0}\r\n                        end={states.deaths}\r\n                        separator=\",\"\r\n                        duration={1}\r\n                    />\r\n                 </TableCell>\r\n\r\n            </TableRow>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StateTable;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { render } from '@testing-library/react';\r\nimport StateTable from './StateTable';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Styles from './India.module.css'; \r\nimport CountUp from 'react-countup';\r\nimport { Card, CardContent, Typography, Grid, Paper} from '@material-ui/core';\r\nimport { Sparklines, SparklinesLine, SparklinesSpots } from 'react-sparklines';\r\nimport Total from './Total.module.css'\r\nimport './index.css';\r\n\r\nconst url=\"https://api.covid19india.org/data.json\";\r\n\r\nconst searching = (term) => {\r\n        return function(x){\r\n            return x.state.toLowerCase().includes(term.toLowerCase()) || !term;\r\n        }\r\n}\r\n\r\nclass IndiaTable extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            states:[],\r\n            total:[],\r\n            graph:[],\r\n            term:\"\",\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    onChange = (e) =>{\r\n        this.setState({term: e.target.value});\r\n    }\r\n\r\n    async componentDidMount(){\r\n\r\n        const res = await axios.get(url);\r\n        console.log(res)\r\n    \r\n        this.setState({states: res.data.statewise});\r\n        this.setState({total: res.data.statewise[0]});\r\n        this.setState({graph: res.data.cases_time_series});\r\n        this.setState({loading:false});\r\n        \r\n    }\r\n\r\n    render(){\r\n    \r\n        const date = new Date().getFullYear()\r\n\r\n        if(this.state.loading){\r\n            return <h1>loaging...</h1>\r\n        }\r\n        \r\n        return(\r\n            <>\r\n    \r\n            <div className='header'>\r\n                <p>Covid-<span className={Styles.span}>19</span></p>\r\n            </div>\r\n\r\n            <div className='search'>\r\n                <input type='text' placeholder='Search...' onChange={this.onChange}/>\r\n            </div>\r\n\r\n            <div className={Total.container}> \r\n                    <div className={Total.cgrid}>\r\n                        <Typography className={Total.confirmed}>Confirmed</Typography>\r\n                        <Typography className={Total.dconfirmed}>🡱{this.state.total.deltaconfirmed}</Typography>\r\n                        <Typography className={Total.tconfirmed}>{this.state.total.confirmed}</Typography>\r\n                        <Sparklines data={this.state.graph.map((chart) => chart.dailyconfirmed)} height={180} margin={8}>\r\n                            <SparklinesLine color=\"red\" style={{ fill: \"red\" }} />\r\n                            <SparklinesSpots size={4} style={{stroke: 'red', fill: \"red\" }} />\r\n                        </Sparklines>\r\n                    </div>\r\n                \r\n                    <div className={Total.agrid}>\r\n                        <Typography className={Total.active}>Active</Typography>\r\n                        <Typography className={Total.tactive}>_</Typography>\r\n                        <Typography className={Total.tactive}>{this.state.total.active}</Typography>\r\n                        <Typography className={Total.tactive}>_</Typography>\r\n                    </div>\r\n\r\n               \r\n                    <div className={Total.rgrid}>\r\n                        <Typography className={Total.recovered}>Recovered</Typography>\r\n                        <Typography className={Total.drecovered}>🡱{this.state.total.deltarecovered}</Typography>\r\n                        <Typography className={Total.trecovered}>{this.state.total.recovered}</Typography>\r\n                        <Sparklines data={this.state.graph.map((chart) => chart.dailyrecovered)} height={180} margin={8}>\r\n                            <SparklinesLine color=\"green\" style={{ fill: \"green\" }}  />\r\n                            <SparklinesSpots size={4} style={{stroke: 'green', fill: \"green\" }} />\r\n                        </Sparklines>\r\n                    </div>\r\n\r\n                    <div className={Total.dgrid}>\r\n                        <Typography className={Total.deaths}>Deaths</Typography>\r\n                        <Typography className={Total.ddeaths}>🡱{this.state.total.deltadeaths}</Typography>\r\n                        <Typography className={Total.tdeaths}>{this.state.total.deaths}</Typography>\r\n                        <Sparklines data={this.state.graph.map((chart) => chart.dailydeceased)} height={180} margin={8}>\r\n                            <SparklinesLine color=\"grey\" style={{ fill: \"grey\" }}  />\r\n                            <SparklinesSpots size={4} style={{stroke: 'grey', fill: \"grey\" }} />\r\n                        </Sparklines>\r\n                    </div> \r\n                \r\n                    \r\n            </div>\r\n                \r\n                <TableContainer className='container'>\r\n                    <Table className={Styles.table}>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell className='shead'>States</TableCell>\r\n                                <TableCell className='chead'>Confirmed</TableCell>\r\n                                <TableCell className='ahead'>Active</TableCell>\r\n                                <TableCell className='rhead'>Recovered</TableCell>\r\n                                <TableCell className='dhead'>Deaths</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this.state.states.filter(searching(this.state.term)).map(States => (\r\n                                <StateTable states={States} key={States.state}/>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            \r\n\r\n            <div className='footer'>\r\n                <p>Copyright &copy; {date} Covid-19</p>\r\n            </div>\r\n            </>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default IndiaTable;","import React, { useState, useEffect } from 'react';\r\nimport {Switch as Linked, Route} from 'react-router-dom';\r\nimport Router from './Router';\r\nimport Tables from './Tables';\r\nimport IndiaTable from './IndiaTable';\r\nimport City from './City';\r\nimport './index.css';\r\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\r\nimport Brightness7SharpIcon from '@material-ui/icons/Brightness7Sharp';\r\n\r\nconst getIntitalValue = () => {\r\n    const isReturn = 'light' in localStorage;\r\n    const Saved = JSON.parse(localStorage.getItem('light'));\r\n    const Prefered = getPre();\r\n    if(isReturn){\r\n        return Saved;\r\n    }else\r\n    if(Prefered){\r\n        return true;\r\n    }else{\r\n        return false;\r\n    }\r\n    \r\n}\r\n\r\nconst getPre = () => {\r\n    if(!window.matchMedia) return;\r\n\r\n   return window.matchMedia(\"(prefers-color-scheme: light)\").matches;\r\n}\r\n\r\nconst App = () => {\r\n    const[darkMode, setDark] = useState(getIntitalValue())\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('light', JSON.stringify(darkMode))\r\n    },[darkMode])\r\n\r\n    \r\n\r\n    return(\r\n        <>\r\n        \r\n        <div className={darkMode ? \"dark-mode\" : 'light-mode'}>\r\n        \r\n        <div className='switch' onClick={() => setDark(prevmode => \r\n          !prevmode\r\n          )}>\r\n            {darkMode ? <Brightness7SharpIcon/> :  <Brightness4Icon/>}\r\n        </div>\r\n        <Linked>\r\n                <Route exact path=\"/\" component={Router} />\r\n                <Route exact path=\"/tables\" component={Tables} />\r\n                <Route exact path=\"/state\" component={IndiaTable}/>\r\n                <Route exact path=\"/district\" component={City}/>\r\n        </Linked>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport AddToHomescreen from 'react-add-to-homescreen';\nimport { BrowserRouter } from 'react-router-dom';\n\n\n\nconst Click = () => {\n  alert('Add Covid-19 To HomeScreen');\n};\n\nReactDOM.render(\n    \n  <>\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n  <div>\n    <App/>\n  </div>\n    <AddToHomescreen onAddToHomescreenClick={Click}/>\n  </BrowserRouter>\n  </>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Table_container__481kb\",\"header\":\"Table_header__1wPCD\",\"span\":\"Table_span__19itR\",\"search\":\"Table_search__3YApa\",\"footer\":\"Table_footer__3s9cV\",\"country\":\"Table_country__ww812\",\"chead\":\"Table_chead__1hiAK\",\"nchead\":\"Table_nchead__HwRpn\",\"confirm\":\"Table_confirm__38gvK\"};"],"sourceRoot":""}